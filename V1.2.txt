
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.STD_LOGIC_UNSIGNED.ALL;
use IEEE.NUMERIC_STD.ALL;

entity USR is
    Port ( rst : in  STD_LOGIC;
           clk : in  STD_LOGIC;
           Sin : in  STD_LOGIC;
           mode : in  STD_LOGIC_VECTOR (1 downto 0);
           Pin : in  STD_LOGIC_VECTOR (3 downto 0);
           Sout : out  STD_LOGIC;
           Pout : out  STD_LOGIC_VECTOR (3 downto 0));
end USR;

architecture USR_arch of USR is
signal temp:STD_LOGIC_VECTOR(3 downto 0):="0000";
begin
	process(rst,clk,mode,Sin,Pin)
		begin
			if rst='1' then
				Pout<="0000";
				Sout<='0';
			elsif FALLING_EDGE(clk) then
				CASE mode is
					when "00"=>
						temp(3 downto 1)<=temp(2 downto 0);
						temp(0)<=Sin;
						Sout<=temp(3);
						Pout<="0000";
					when "01"=>
						temp(3 downto 1)<=temp(2 downto 0);
						temp(0)<=Sin;
						Pout<=temp;
						Sout<='0';
					when "10"=>
						temp<=Pin;
						Sout<=temp(3);
						temp(3 downto 1)<=temp(2 downto 0);
						Pout<="0000";
					when others=>
						Pout<=Pin;
						Sout<='0';
				end CASE;
			end if;
		end process;
end USR_arch;



LIBRARY ieee;
USE ieee.std_logic_1164.ALL;
 
ENTITY USR_tb IS
END USR_tb;
 
ARCHITECTURE behavior OF USR_tb IS 
 
    COMPONENT USR
    PORT(
         rst : IN  std_logic;
         clk : IN  std_logic;
         Sin : IN  std_logic;
         mode : IN  std_logic_vector(1 downto 0);
         Pin : IN  std_logic_vector(3 downto 0);
         Sout : OUT  std_logic;
         Pout : OUT  std_logic_vector(3 downto 0)
        );
    END COMPONENT;
    

   --Inputs
   signal rst : std_logic := '0';
   signal clk : std_logic := '1';
   signal Sin : std_logic := '0';
   signal mode : std_logic_vector(1 downto 0) := (others => '0');
   signal Pin : std_logic_vector(3 downto 0) := "1010";

 	--Outputs
   signal Sout : std_logic;
   signal Pout : std_logic_vector(3 downto 0);
	
	constant clk_period:time:=10 ns;
 
BEGIN
 
	-- Instantiate the Unit Under Test (UUT)
   uut: USR PORT MAP (
          rst => rst,
          clk => clk,
          Sin => Sin,
          mode => mode,
          Pin => Pin,
          Sout => Sout,
          Pout => Pout
        );

   -- Clock process definitions
   clk_process :process
   begin
		clk<=NOT(clk);
		wait for clk_period/2;
   end process;
 
   -- Stimulus process
   stim_proc_mode: process
   begin		
		mode<="00";
			wait for 80 ns;
		mode<="01";
			wait for 50 ns;
		mode<="10";
			wait for 50 ns;
		mode<="11";
			wait for 20 ns;
   end process;
	stim_proc_Sin:process
	begin
	wait for 10 ns;
		Sin<='1';
			wait for 10 ns;
		Sin<='0';
			wait for 10 ns;
		Sin<='1';
			wait for 10 ns;
		Sin<='0';
			wait for 10 ns;
		Sin<='0';
			wait for 10 ns;
		Sin<='1';
			wait for 10 ns;
		Sin<='0';
			wait for 10 ns;
		Sin<='1';
			wait for 10 ns;
		Sin<='0';
			wait for 10 ns;
		Sin<='0';
			wait;
	end process;
	stim_proc_rst:process
	begin
		rst<='0';
			wait for 300 ns;
		rst<='1';
			wait for 10 ns;
	end process;
END;
